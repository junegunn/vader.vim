Given:

Execute (Execute gets wrapped in function):
# Vader comment
  " Vimscript comment
  let f = expand('<sfile>', 1)
  let m = matchlist(f, '\Vfunction \(<SNR>\d\+_vader_wrapper\)')
  Assert !empty(m), 'Wrapped in function'
  redir => func
    silent exe 'function '.m[1]
  redir END
  for l in split(func, '\n')[1:-2]
    call append(line('$'), l)
  endfor

Expect (Contents of wrapped function):

  1  " # Vader comment
  2  " Vimscript comment
  3  let f = expand('<sfile>', 1)
  4  let m = matchlist(f, '\Vfunction \(<SNR>\d\+_vader_wrapper\)')
  5  Assert !empty(m), 'Wrapped in function'
  6  redir => func
  7    silent exe 'function '.m[1]
  8  redir END
  9  for l in split(func, '\n')[1:-2]
  10   call append(line('$'), l)
  11 endfor

Then (Thrown from line 3):
# Vader comment
  " Comment
  AssertThrows throw "testexception"
  let m = matchlist(g:vader_throwpoint, '\Vfunction <SNR>\d\+_vader_wrapper[\(\d\+\)]..vader#assert#throws, line 5')
  AssertEqual m[1], '3', 'Thrown from line 3'

Execute (Thrown from line 3):
# Vader comment
  " Comment
  AssertThrows throw "testexception"
  let m = matchlist(g:vader_throwpoint, '\Vfunction <SNR>\d\+_vader_wrapper[\(\d\+\)]..vader#assert#throws, line 5')
  AssertEqual m[1], '3', 'Thrown from line 3'
